name: Build svg and deploy on GitHub Releases

on:
  push:
    tags: '*'
    branches-ignore:
      - 'autodelivery**'
      - 'bump-**'
      - 'renovate/**'
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - 'LICENSE'
      - 'renovate.json'
  pull_request:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  compile:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }} 
          submodules: recursive
      
      - name: Install Inkscape
        run: |
          sudo apt-get update
          sudo apt-get install -y inkscape

      - name: Generate PDFs from SVGs
        run: |
          for file in *.svg; do
            inkscape --export-type=pdf "$file"
          done

      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install
          npx -p node@v18-lts -c "npx semantic-release"

    #   - name: Deploy to GitHub Releases
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     shell: bash
    #     run: |
    #       if [[ $GITHUB_REF == 'refs/heads/master' || $GITHUB_REF == 'refs/heads/main' ]]; then
    #         TAG=$(git describe --tags --exact-match HEAD || echo "")
    #         if [[ -n $TAG ]]; then
    #           echo "Preparing release $TAG"
    #           gh release create "$TAG" ./*.pdf --notes "Release $TAG" --clobber
    #         else
    #           echo "No tag found for this commit"
    #         fi
    #       else
    #         echo "Deployment not triggered. Current branch: $GITHUB_REF"
    #       fi
      - name: Autotag
        uses: DanySK/semver-autotag-action@0.1.0
      - name: Deploy
        if: inputs.publish-enable == 'true'
        env:
            GITHUB_TOKEN: ${{ inputs.token }}
        shell: bash
        run: |
            if [[ -z $GITHUB_TOKEN ]]; then
            echo "No token set, cannot deploy"
            false
            else
                if [[ $GITHUB_REF == 'refs/heads/master'
                    || $GITHUB_REF == 'refs/heads/main'
                    || $GITHUB_REF == 'refs/heads/default'
                    || $GITHUB_REF == "refs/tags"*
                ]]; then
                    TAG=$(git describe --tags --exact-match HEAD)
                    echo "Preparing release $TAG"
                    git tag --delete "$TAG"
                    git tag "$TAG"
                    git push --tags && echo "Tag $TAG successfully pushed" || true
                    gh release create --notes-from-tag "$TAG" || true
                    while IFS= read -r file; do
                    pdf="${file%.*}.pdf"
                    echo "Delivering file $pdf"
                    gh release upload "$TAG" "$pdf" --clobber
                    done <<< "$LATEX_SUCCESSES"
                else
                    echo "Not running deployment from unknown source: $GITHUB_REF"
                fi
            fi